name: eBPF Smoke Test

on:
  workflow_dispatch:
  push:
    paths:
      - 'carnot-agent/ebpf-core/openssl_handshake.bpf.c'
      - 'carnot-agent/ebpf-core/go-loader/**'
      - 'scripts/ebpf_smoke_test.sh'
      - '.github/workflows/ebpf-smoke.yml'

jobs:
  smoke:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install base deps
        run: |
          set -e
          sudo apt-get update
          sudo apt-get install -y clang llvm make git jq libbpf-dev linux-headers-$(uname -r) build-essential libelf-dev zlib1g-dev golang-go
          go install github.com/rakyll/hey@latest
          echo "$(go env GOPATH)/bin" >> $GITHUB_PATH
      - name: Setup bpftool (composite action)
        uses: ./.github/actions/setup-bpftool
        with:
          version: v7.3.0
      - name: Go mod tidy
        run: |
          cd carnot-agent/ebpf-core/go-loader
          go mod tidy
      - name: Normal ring buffer run
        run: bash scripts/ebpf_smoke_test.sh -m normal -d 10s -c 50
      - name: Small ring buffer run (expect drops)
        run: bash scripts/ebpf_smoke_test.sh -m small -d 10s -c 50
      - name: Assert drop behavior
        run: |
          echo "Asserting drop expectations from small ring buffer test"
          if [ ! -f integrations/runtime/metrics.json ]; then echo "metrics.json missing"; exit 1; fi
          cat integrations/runtime/metrics.json
          DROPS=$(jq -r '.kernel_drops // 0' integrations/runtime/metrics.json)
          RATE=$(jq -r '.kernel_drop_rate // 0' integrations/runtime/metrics.json)
          if [ "$DROPS" -eq 0 ]; then echo "Expected >0 kernel_drops in SMALL_RB run"; exit 1; fi
          if (( $(echo "$RATE <= 0" | bc -l) )); then echo "Expected positive kernel_drop_rate"; exit 1; fi
          echo "OK: kernel_drops=$DROPS kernel_drop_rate=$RATE"
      - name: Collect artifacts
        run: |
          mkdir -p smoke-artifacts
          cp integrations/runtime/metrics.json smoke-artifacts/metrics_small_or_last.json || true
          cp integrations/runtime/runtime.jsonl smoke-artifacts/runtime_small_or_last.jsonl || true
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ebpf-smoke
          path: smoke-artifacts
      - name: Append summary
        run: |
          echo '### eBPF Smoke Test' >> $GITHUB_STEP_SUMMARY
          if [ -f integrations/runtime/metrics.json ]; then
            echo '\n```json' >> $GITHUB_STEP_SUMMARY
            cat integrations/runtime/metrics.json >> $GITHUB_STEP_SUMMARY
            echo '```' >> $GITHUB_STEP_SUMMARY
          fi